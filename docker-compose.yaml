services:
  postgres:
    container_name: postgres-container
    image: postgres:14.17
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: ChatMessages
    volumes:
      - data:/var/lib/postgresql/data
      - ./middleware/Services/dbInitScript/init.sql:/docker-entrypoint-initdb.d/init.sql

  middleware:
    container_name: middleware
    image: ghcr.io/robertvlp/crab_middleware:latest
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
      BACKEND_ENDPOINT: ${BACKEND_ENDPOINT}
    depends_on:
      - postgres

  backend:
    container_name: backend
    image: ghcr.io/robertvlp/crab_backend:latest
    environment:
      AZURE_SUBSCRIPTION_ID: ${AZURE_SUBSCRIPTION_ID}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}

  frontend:
    container_name: frontend
    image: ghcr.io/robertvlp/crab_frontend:latest
    ports:
      - "3000:3000"
    depends_on:
      - middleware
    environment:
      VITE_API_URL: ${VITE_API_URL}

  kong:
    container_name: kong
    image: kong:latest
    ports:
      - "8000:8000"
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yaml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    volumes:
      - ./kong:/usr/local/kong/declarative

volumes:
  data:
    name: postgres-data